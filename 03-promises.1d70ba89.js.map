{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCEQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAIC,EAAgBC,OAAON,EAAMO,OAC7BC,EAAeF,OAAOL,EAAKM,OAC/B,MAAME,EAAiBH,OAAOJ,EAAOK,OACrC,GAAIE,EAAiB,GAAKD,GAAgB,GAAKH,GAAiB,EAC9D,IAAK,IAAIK,EAAI,EAAGA,GAAKD,EAAgBC,GAAK,EACxCzB,EAAcyB,EAAGL,GACdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,IAGnDkB,GAAiBG,OAGnBI,EAAA7B,GAAS8B,OAAOI,QAAQ,gCAE1BnB,EAAIK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', submitHandler);\n\nfunction submitHandler(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let numberedDelay = Number(delay.value);\n  let numberedStep = Number(step.value);\n  const numberedAmount = Number(amount.value);\n  if (numberedAmount > 0 && numberedStep >= 0 && numberedDelay >= 0) {\n    for (let i = 1; i <= numberedAmount; i += 1) {\n      createPromise(i, numberedDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      numberedDelay += numberedStep;\n    }\n  } else {\n    Notiflix.Notify.warning('Please enter positive number');\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","numberedDelay","Number","value","numberedStep","numberedAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure","warning","reset"],"version":3,"file":"03-promises.1d70ba89.js.map"}